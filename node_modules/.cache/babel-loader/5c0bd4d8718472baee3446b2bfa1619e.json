{"ast":null,"code":"var _regeneratorRuntime = require(\"/home/user/Desktop/project/iqoption/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/user/Desktop/project/iqoption/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar Settings = require(\"../../settings\");\n\nmodule.exports = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(email, password) {\n    var _yield$this$Http, code, message, ssid;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return this.Http(Settings.API.URL.auth, \"api/v2/login\", \"POST\", {\n              identifier: email,\n              password: password\n            }, {\n              Cookie: \"lang=pt_PT\"\n            });\n\n          case 2:\n            _yield$this$Http = _context.sent;\n            code = _yield$this$Http.code;\n            message = _yield$this$Http.message;\n            ssid = _yield$this$Http.ssid;\n\n            if (!(code != \"success\")) {\n              _context.next = 8;\n              break;\n            }\n\n            throw new Error(message);\n\n          case 8:\n            this.ssid = ssid;\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/home/user/Desktop/project/iqoption/node_modules/iqoptionzzz/lib/api/http/login.js"],"names":["Settings","require","module","exports","email","password","Http","API","URL","auth","identifier","Cookie","code","message","ssid","Error"],"mappings":";;;;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,gBAAD,CAAxB;;AAEAC,MAAM,CAACC,OAAP;AAAA,sEAAiB,iBAAeC,KAAf,EAAsBC,QAAtB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAKN,KAAKC,IAAL,CAAUN,QAAQ,CAACO,GAAT,CAAaC,GAAb,CAAiBC,IAA3B,EAAiC,cAAjC,EAAiD,MAAjD,EAAyD;AAClEC,cAAAA,UAAU,EAAEN,KADsD;AAElEC,cAAAA,QAAQ,EAARA;AAFkE,aAAzD,EAGP;AACFM,cAAAA,MAAM,EAAE;AADN,aAHO,CALM;;AAAA;AAAA;AAEfC,YAAAA,IAFe,oBAEfA,IAFe;AAGfC,YAAAA,OAHe,oBAGfA,OAHe;AAIfC,YAAAA,IAJe,oBAIfA,IAJe;;AAAA,kBAYZF,IAAI,IAAI,SAZI;AAAA;AAAA;AAAA;;AAAA,kBAaT,IAAIG,KAAJ,CAAUF,OAAV,CAbS;;AAAA;AAehB,iBAAKC,IAAL,GAAYA,IAAZ;;AAfgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["const Settings = require(\"../../settings\")\r\n\r\nmodule.exports = async function(email, password) {\r\n\tconst {\r\n\t\tcode,\r\n\t\tmessage,\r\n\t\tssid\r\n\t} = await this.Http(Settings.API.URL.auth, \"api/v2/login\", \"POST\", {\r\n\t\tidentifier: email,\r\n\t\tpassword\r\n\t}, {\r\n\t\tCookie: \"lang=pt_PT\"\r\n\t})\r\n\r\n\tif (code != \"success\")\r\n\t\tthrow new Error(message)\r\n\r\n\tthis.ssid = ssid\r\n}"]},"metadata":{},"sourceType":"script"}