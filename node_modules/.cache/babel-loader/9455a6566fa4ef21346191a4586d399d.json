{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/project/iqoption/src/pages/Main/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport storage from '../../utils/storage';\nimport schedule from 'node-schedule';\nimport IQOption from 'iqoptionzzz';\nimport operate from '../../utils/operate';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { Div, DivChange, DivConfig, DivStarted, StartBot } from './styled';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function LoginIQ({\n  history\n}) {\n  _s();\n\n  const [stopWin, setStopWin] = React.useState(0);\n  const [stopLoss, setStopLoss] = React.useState(0);\n  const [delay, setDelay] = React.useState(0);\n  const [file, setFile] = React.useState();\n  const [balance, setBalance] = React.useState(false);\n  const [buttonName, setButtonName] = React.useState('Configurar');\n  const [martinGales, setMartinGales] = React.useState([]);\n  const [oldTrade, setOldTrade] = React.useState({\n    time: '',\n    active: '',\n    direction: ''\n  });\n  const [nextTrade, setNextTrade] = React.useState({\n    time: '',\n    active: '',\n    direction: ''\n  });\n  const buttonStart = React.useRef();\n  const div = React.useRef();\n  const divConfig = React.useRef();\n  const divChange = React.useRef();\n  const divStarted = React.useRef();\n  const martin = React.useRef();\n  const iqoption = useSelector(state => state.iqoption);\n\n  async function handleClick(e) {\n    if (buttonStart.current.innerText === 'Stop') {\n      divStarted.current.style.display = 'none';\n      buttonStart.current.innerText = 'Start';\n      buttonStart.current.style.backgroundColor = 'green';\n      div.current.style.display = 'block';\n      divChange.current.style.display = 'block';\n      return;\n    }\n\n    const errors = [];\n    if (!stopWin) errors.push('Preencha stopWin');\n    if (!stopLoss) errors.push('Preencha stopLoss');\n    if (!file) errors.push('Coloque uma lista');\n    if (martinGales.length === 0) errors.push('Preencha os martingales');\n    if (errors.length > 0) return errors.forEach(value => {\n      toast.error(value);\n    });\n\n    if (buttonStart.current.innerText === 'Start') {\n      buttonStart.current.innerText = 'Stop';\n      buttonStart.current.style.backgroundColor = 'red';\n      div.current.style.display = 'none';\n      divConfig.current.style.display = 'none';\n      divChange.current.style.display = 'none';\n      divStarted.current.style.display = 'block';\n    }\n\n    storage.setStopLoss(stopLoss);\n    storage.setStopWin(stopWin);\n    storage.setMartinGales(martinGales);\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const {\n        data\n      } = await axios.post(`http://${process.env.REACT_APP_HOST_APP}/api/v2/sinais`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (data.length === 0) return toast.error('Por favor adicione pelo menos 2 trades a lista');\n\n      try {\n        const API = await toast.promise(IQOption({\n          email: iqoption.email,\n          password: iqoption.password\n        }), {\n          pending: 'Aguarde',\n          success: 'Bot inicializado, nao feche o navegador',\n          error: 'Erro ao iniciar o bot'\n        });\n        console.log('IQOPTION CONNECTED');\n        setOldTrade({\n          active: data[0].active,\n          direction: data[0].direction,\n          time: `${data[0].time.hour}:${data[0].time.minutes}`\n        });\n        data.forEach((value, index, array) => {\n          schedule.scheduleJob({\n            hour: value.time.hour,\n            minute: value.time.minutes\n          }, () => {\n            try {\n              let indexOld = index - 1;\n              if (index === 0) indexOld = 0;\n              let indexNew = index + 1;\n              if (array.length - 1 === index) indexNew = index;\n              setOldTrade({\n                active: array[indexOld].active,\n                direction: array[indexOld].direction,\n                time: `${array[indexOld].time.hour}:${array[indexOld].time.minutes}`\n              });\n              setNextTrade({\n                active: array[indexNew].active,\n                direction: array[indexNew].direction,\n                time: `${array[indexNew].time.hour}:${array[indexNew].time.minutes}`\n              });\n              operate(API, value.active, value.direction, Number(value.duration));\n            } catch (e) {//\n            }\n          });\n        });\n      } catch (e) {\n        console.log(e);\n        toast.error('Verifique as configuracoes');\n        div.current.style.display = 'block';\n        divStarted.current.style.display = 'none';\n        buttonStart.current.innerText = 'Start';\n        buttonStart.current.style.backgroundColor = 'green';\n      }\n    } catch (e) {\n      toast.error('Arquivo invalido');\n    }\n  }\n\n  React.useEffect(() => {\n    async function getBalance() {\n      if (balance) return;\n      const ws = new WebSocket('wss://iqoption.com/echo/websocket');\n\n      ws.onopen = () => {\n        console.log('Started');\n        ws.send(JSON.stringify({\n          \"name\": \"ssid\",\n          \"msg\": iqoption.ssid\n        }));\n      };\n\n      ws.onmessage = message => {\n        const myMessage = JSON.parse(message.data);\n\n        if (myMessage.name === 'profile') {\n          setBalance(myMessage.msg.balances[1].amount);\n          ws.close();\n        }\n      };\n    }\n\n    getBalance();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DivStarted, {\n      ref: divStarted,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Anterior\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [oldTrade.time, \" \", oldTrade.active, \" \", oldTrade.direction]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Proximo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [nextTrade.time, \" \", nextTrade.active, \" \", nextTrade.direction]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DivChange, {\n      ref: divChange,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          if (div.current.style.display === 'none') {\n            div.current.style.display = 'block';\n            divConfig.current.style.display = 'none';\n            setButtonName('Configurar');\n            return;\n          }\n\n          div.current.style.display = 'none';\n          divConfig.current.style.display = 'block';\n          setButtonName('Iniciar');\n        },\n        children: buttonName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DivConfig, {\n      ref: divConfig,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Banca \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: balance ? `$${balance}` : 'Loading...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Delay \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            onChange: e => {\n              const value = e.target.value;\n              if (!value) return;\n              setDelay(value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Stop Win \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            onChange: e => {\n              const value = e.target.value;\n              if (!value) return;\n              setStopWin(value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Stop Loss \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            onChange: e => {\n              const value = e.target.value;\n              if (!value) return;\n              setStopLoss(value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"MartinGale \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ref: martin,\n            type: \"number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 34\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const value = martin.current.value;\n              if (isNaN(value)) return;\n              const splited = value.split(' ');\n              if (splited[0] === '') return;\n              setMartinGales(state => {\n                const newState = [...state];\n                newState.push(Number(value));\n                martin.current.value = '';\n                return newState;\n              });\n            },\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 71\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Listas \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"text/plain\",\n            onChange: e => {\n              const file = e.target.files[0];\n              setFile(file);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Div, {\n      ref: div,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Banca \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: balance ? `$${balance}` : 'Loading...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Delay \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: delay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Stop Win \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: stopWin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Stop Loss \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: stopLoss\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"MartinGales \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: martinGales.map(value => {\n            return `${value}\\n`;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(StartBot, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        ref: buttonStart,\n        onClick: handleClick,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(LoginIQ, \"gGslsff/iOSaskdi45lV1hMVs4A=\", false, function () {\n  return [useSelector];\n});\n\n_c = LoginIQ;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginIQ\");","map":{"version":3,"sources":["/home/user/Desktop/project/iqoption/src/pages/Main/index.tsx"],"names":["React","storage","schedule","IQOption","operate","axios","toast","Div","DivChange","DivConfig","DivStarted","StartBot","useSelector","LoginIQ","history","stopWin","setStopWin","useState","stopLoss","setStopLoss","delay","setDelay","file","setFile","balance","setBalance","buttonName","setButtonName","martinGales","setMartinGales","oldTrade","setOldTrade","time","active","direction","nextTrade","setNextTrade","buttonStart","useRef","div","divConfig","divChange","divStarted","martin","iqoption","state","handleClick","e","current","innerText","style","display","backgroundColor","errors","push","length","forEach","value","error","formData","FormData","append","data","post","process","env","REACT_APP_HOST_APP","headers","API","promise","email","password","pending","success","console","log","hour","minutes","index","array","scheduleJob","minute","indexOld","indexNew","Number","duration","useEffect","getBalance","ws","WebSocket","onopen","send","JSON","stringify","ssid","onmessage","message","myMessage","parse","name","msg","balances","amount","close","target","isNaN","splited","split","newState","files","map"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { RouteComponentProps } from 'react-router-dom';\nimport storage from '../../utils/storage'\n\nimport schedule from 'node-schedule';\n\nimport IQOption from 'iqoptionzzz';\nimport operate from '../../utils/operate'\n\nimport axios from 'axios';\n\nimport { toast } from 'react-toastify';\nimport { Div, DivChange, DivConfig, DivStarted, StartBot } from './styled';\n\nimport { useSelector } from 'react-redux';\n\n\nexport default function LoginIQ({ history }:{ history: RouteComponentProps['history'] }) {\n    const [ stopWin, setStopWin ] = React.useState(0);\n    const [ stopLoss, setStopLoss ] = React.useState(0);\n    const [ delay, setDelay ] = React.useState(0);\n    const [ file, setFile ] = React.useState<File>();\n    const [ balance, setBalance ] = React.useState<number | boolean>(false);\n    const [ buttonName, setButtonName ] = React.useState('Configurar');\n    const [ martinGales, setMartinGales ] = React.useState<number[]>([]);\n\n    const [ oldTrade, setOldTrade ] = React.useState({\n        time: '',\n        active: '',\n        direction: '',\n    });\n\n    const [ nextTrade, setNextTrade ] = React.useState({\n        time: '',\n        active: '',\n        direction: '',\n    });\n\n    const buttonStart = React.useRef<HTMLButtonElement>();\n\n    const div = React.useRef<HTMLDivElement>();\n    const divConfig = React.useRef<HTMLDivElement>();\n    const divChange = React.useRef<HTMLDivElement>();\n    const divStarted = React.useRef<HTMLDivElement>();\n\n    const martin = React.useRef<HTMLInputElement>();\n\n    const iqoption = useSelector((state: {\n        iqoption: {\n            email: string;\n            password: string;\n            ssid: string;\n        }\n    }) => state.iqoption);\n    \n    async function handleClick(e: React.ChangeEvent<any>): Promise<unknown> {\n        if(buttonStart.current.innerText === 'Stop') {\n            divStarted.current.style.display = 'none';\n            buttonStart.current.innerText = 'Start';\n            buttonStart.current.style.backgroundColor = 'green';\n            div.current.style.display = 'block';\n            divChange.current.style.display = 'block';\n\n\n            return;\n        }\n        \n        const errors: string[] = [];\n        if(!stopWin) errors.push('Preencha stopWin');\n        if(!stopLoss) errors.push('Preencha stopLoss');\n        if(!file) errors.push('Coloque uma lista');\n        if(martinGales.length === 0) errors.push('Preencha os martingales');\n\n        if(errors.length > 0) return errors.forEach((value) => {\n            toast.error(value);\n        });\n\n        if(buttonStart.current.innerText === 'Start') {\n            buttonStart.current.innerText = 'Stop';\n            buttonStart.current.style.backgroundColor = 'red';\n            div.current.style.display = 'none';\n            divConfig.current.style.display = 'none';\n            divChange.current.style.display = 'none';\n            divStarted.current.style.display = 'block';\n        } \n\n\n        storage.setStopLoss(stopLoss);\n        storage.setStopWin(stopWin);\n        storage.setMartinGales(martinGales);\n\n        const formData = new FormData();\n        formData.append('file', file);\n\n       try {\n           const { data }: { data: any } = await axios.post(`http://${process.env.REACT_APP_HOST_APP}/api/v2/sinais`, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n\n        });\n\n        if(data.length === 0) return toast.error('Por favor adicione pelo menos 2 trades a lista');\n\n        try {\n            const API = await toast.promise(IQOption({\n                email: iqoption.email,\n                password: iqoption.password\n            }), {\n                pending: 'Aguarde',\n                success: 'Bot inicializado, nao feche o navegador',\n                error: 'Erro ao iniciar o bot'\n            });\n            console.log('IQOPTION CONNECTED');\n\n            setOldTrade({\n                active: data[0].active,\n                direction: data[0].direction,\n                time: `${data[0].time.hour}:${data[0].time.minutes}`\n            });\n\n            data.forEach((value, index, array) => {\n                schedule.scheduleJob({ hour: value.time.hour, minute: value.time.minutes}, () => {\n                    try {\n                        let indexOld = index - 1;\n                if(index === 0) indexOld = 0;\n\n                let indexNew = index + 1;\n                if(array.length - 1 === index) indexNew = index;\n\n                setOldTrade({\n                    active: array[indexOld].active,\n                    direction: array[indexOld].direction,\n                    time: `${array[indexOld].time.hour}:${array[indexOld].time.minutes}`\n                });\n\n                setNextTrade({\n                    active: array[indexNew].active,\n                    direction: array[indexNew].direction,\n                    time: `${array[indexNew].time.hour}:${array[indexNew].time.minutes}`\n                });\n                \n                    operate(API, value.active, value.direction, Number(value.duration));\n                    } catch(e) {\n                        //\n                    }\n                });\n            });\n            \n        } catch(e) {\n            console.log(e);\n            toast.error('Verifique as configuracoes');\n            div.current.style.display = 'block';\n            divStarted.current.style.display = 'none';\n            buttonStart.current.innerText = 'Start';\n            buttonStart.current.style.backgroundColor = 'green';\n        }\n       } catch(e) {\n           toast.error('Arquivo invalido');\n       }\n\n       \n\n    }\n\n    React.useEffect(() => {\n         async function getBalance() {\n             if(balance) return;\n            const ws = new WebSocket('wss://iqoption.com/echo/websocket');\n\n           ws.onopen = () => {\n               console.log('Started');\n               ws.send(JSON.stringify({\"name\":\"ssid\",\"msg\": iqoption.ssid}));\n            }\n\n            ws.onmessage = (message) => {\n                const myMessage = JSON.parse(message.data) as {\n                    name: string;\n                    msg: {\n                        balances: {\n                            amount: number;\n                        }[];\n                    }\n                };\n                \n                if(myMessage.name === 'profile') {\n                    setBalance(myMessage.msg.balances[1].amount)\n                    ws.close();\n                }\n            }\n        }\n\n        getBalance();\n    });\n    return(\n        <>\n        <DivStarted ref={divStarted}>\n            <p>Anterior</p>\n            <button><p>{ oldTrade.time } { oldTrade.active } { oldTrade.direction }</p></button>\n\n            <p>Proximo</p>\n            <button><p>{ nextTrade.time } { nextTrade.active } { nextTrade.direction }</p></button>\n        </DivStarted>\n        <DivChange ref={divChange}>\n            <button onClick={(e: any) => {\n                if(div.current.style.display === 'none') {\n                    div.current.style.display = 'block';\n                    divConfig.current.style.display = 'none';\n                    setButtonName('Configurar');\n                    return;\n                }\n                \n                div.current.style.display = 'none';\n                divConfig.current.style.display = 'block';\n                \n                setButtonName('Iniciar');\n            }}>{ buttonName }</button>\n        </DivChange>\n        <DivConfig ref={divConfig}>\n            <h1>Banca <span>{ balance ? `$${balance}` : 'Loading...' }</span></h1>\n            <h1>Delay <span><input type=\"number\" onChange={(e) => {\n                const value = e.target.value as unknown as number;\n                if(!value) return;\n                setDelay(value);\n            }}/></span></h1>\n            <h1>Stop Win <span><input type=\"number\" onChange={(e) => {\n                const value = e.target.value as unknown as number;\n                if(!value) return;\n                setStopWin(value);\n            }}/></span></h1>\n            <h1>Stop Loss <span><input type=\"number\" onChange={(e) => {\n                const value = e.target.value as unknown as number;\n                if(!value) return;\n                setStopLoss(value);\n            }}/></span></h1>\n            <h1>MartinGale <span><input ref={martin} type=\"number\" /> <button onClick={() => {\n                const value = martin.current.value as unknown as number;\n                if(isNaN(value)) return;\n                const splited = (value as unknown as string).split(' ');\n                if(splited[0] === '') return;\n                setMartinGales((state) => {\n                    const newState = [ ...state ];\n                    newState.push(Number(value));\n                    martin.current.value = '';\n                    return newState;\n                });\n            }}>Add</button></span></h1>\n            <h1>Listas <span><input type=\"file\" accept=\"text/plain\" onChange={(e) => {\n                const file = e.target.files[0];\n                setFile(file);\n            }} /></span></h1>\n        </DivConfig>\n\n        <Div ref={div}>\n            <h1>Banca <span>{ balance ? `$${balance}` : 'Loading...' }</span></h1>\n            <h1>Delay <span>{ delay }</span></h1>\n            <h1>Stop Win <span>{ stopWin }</span></h1>\n            <h1>Stop Loss <span>{ stopLoss }</span></h1>\n            <h1>MartinGales <span>{ martinGales.map((value) => {\n                return `${value}\\n`;\n            }) }</span></h1>\n        </Div>\n\n        <StartBot>\n            <button ref={buttonStart} onClick={handleClick}>Start</button>\n        </StartBot>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}