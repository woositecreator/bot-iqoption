{"ast":null,"code":"module.exports = function (type) {\n  return new Promise((resolve, reject) => {\n    if ([\"PRACTICE\", \"REAL\"].indexOf(type) == -1) return reject(\"Ativo inválido.\");\n    const id = this.WebSocket.send(\"sendMessage\", {\n      name: \"get-balances\",\n      version: \"1.0\",\n      body: {\n        types_ids: [1, 4, 2],\n        tournaments_statuses_ids: [3, 2]\n      }\n    });\n\n    const callback = message => {\n      if (message.request_id == id) {\n        this.WebSocket.emitter.removeListener(\"balances\", callback);\n        return resolve(message.msg.find(balance => type == \"REAL\" && balance.type == 1 || type == \"PRACTICE\" && balance.type == 4));\n      }\n    };\n\n    this.WebSocket.getMessage(\"balances\", callback);\n  });\n};","map":{"version":3,"sources":["/home/user/Desktop/project/iqoption/node_modules/iqoptionzzz/lib/api/websocket/getbalance.js"],"names":["module","exports","type","Promise","resolve","reject","indexOf","id","WebSocket","send","name","version","body","types_ids","tournaments_statuses_ids","callback","message","request_id","emitter","removeListener","msg","find","balance","getMessage"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAe;AAC/B,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACvC,QAAI,CAAC,UAAD,EAAa,MAAb,EAAqBC,OAArB,CAA6BJ,IAA7B,KAAsC,CAAC,CAA3C,EACC,OAAOG,MAAM,CAAC,iBAAD,CAAb;AAED,UAAME,EAAE,GAAG,KAAKC,SAAL,CAAeC,IAAf,CAAoB,aAApB,EAAmC;AAC7CC,MAAAA,IAAI,EAAE,cADuC;AAE7CC,MAAAA,OAAO,EAAE,KAFoC;AAG7CC,MAAAA,IAAI,EAAE;AACLC,QAAAA,SAAS,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADN;AAELC,QAAAA,wBAAwB,EAAE,CAAC,CAAD,EAAI,CAAJ;AAFrB;AAHuC,KAAnC,CAAX;;AASA,UAAMC,QAAQ,GAAGC,OAAO,IAAI;AAC3B,UAAIA,OAAO,CAACC,UAAR,IAAsBV,EAA1B,EAA8B;AAC7B,aAAKC,SAAL,CAAeU,OAAf,CAAuBC,cAAvB,CAAsC,UAAtC,EAAkDJ,QAAlD;AACA,eAAOX,OAAO,CAACY,OAAO,CAACI,GAAR,CAAYC,IAAZ,CAAiBC,OAAO,IAAIpB,IAAI,IAAI,MAAR,IAAkBoB,OAAO,CAACpB,IAAR,IAAgB,CAAlC,IAAuCA,IAAI,IAAI,UAAR,IAAsBoB,OAAO,CAACpB,IAAR,IAAgB,CAAzG,CAAD,CAAd;AACA;AACD,KALD;;AAOA,SAAKM,SAAL,CAAee,UAAf,CAA0B,UAA1B,EAAsCR,QAAtC;AACA,GArBM,CAAP;AAsBA,CAvBD","sourcesContent":["module.exports = function(type) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tif ([\"PRACTICE\", \"REAL\"].indexOf(type) == -1)\r\n\t\t\treturn reject(\"Ativo inválido.\")\r\n\r\n\t\tconst id = this.WebSocket.send(\"sendMessage\", {\r\n\t\t\tname: \"get-balances\",\r\n\t\t\tversion: \"1.0\",\r\n\t\t\tbody: {\r\n\t\t\t\ttypes_ids: [1, 4, 2],\r\n\t\t\t\ttournaments_statuses_ids: [3, 2]\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tconst callback = message => {\r\n\t\t\tif (message.request_id == id) {\r\n\t\t\t\tthis.WebSocket.emitter.removeListener(\"balances\", callback)\r\n\t\t\t\treturn resolve(message.msg.find(balance => type == \"REAL\" && balance.type == 1 || type == \"PRACTICE\" && balance.type == 4))\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.WebSocket.getMessage(\"balances\", callback)\r\n\t})\r\n}"]},"metadata":{},"sourceType":"script"}