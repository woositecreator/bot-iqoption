{"ast":null,"code":"'use strict';\n/*\n  node-schedule\n  A cron-like and not-cron-like job scheduler for Node.\n*/\n\nvar _require = require('./Job'),\n    Job = _require.Job,\n    scheduledJobs = _require.scheduledJobs;\n/* API\n  invoke()\n  runOnDate(date)\n  schedule(date || recurrenceRule || cronstring)\n  cancel(reschedule = false)\n  cancelNext(reschedule = true)\n\n   Property constraints\n  name: readonly\n  job: readwrite\n*/\n\n/* Convenience methods */\n\n\nfunction scheduleJob() {\n  if (arguments.length < 2) {\n    throw new RangeError('Invalid number of arguments');\n  }\n\n  var name = arguments.length >= 3 && typeof arguments[0] === 'string' ? arguments[0] : null;\n  var spec = name ? arguments[1] : arguments[0];\n  var method = name ? arguments[2] : arguments[1];\n  var callback = name ? arguments[3] : arguments[2];\n\n  if (typeof method !== 'function') {\n    throw new RangeError('The job method must be a function.');\n  }\n\n  var job = new Job(name, method, callback);\n\n  if (job.schedule(spec)) {\n    return job;\n  }\n\n  return null;\n}\n\nfunction rescheduleJob(job, spec) {\n  if (job instanceof Job) {\n    if (job.reschedule(spec)) {\n      return job;\n    }\n  } else if (typeof job === 'string') {\n    if (scheduledJobs.hasOwnProperty(job)) {\n      if (scheduledJobs[job].reschedule(spec)) {\n        return scheduledJobs[job];\n      }\n    } else {\n      throw new Error('Cannot reschedule one-off job by name, pass job reference instead');\n    }\n  }\n\n  return null;\n}\n\nfunction cancelJob(job) {\n  var success = false;\n\n  if (job instanceof Job) {\n    success = job.cancel();\n  } else if (typeof job == 'string' || job instanceof String) {\n    if (job in scheduledJobs && scheduledJobs.hasOwnProperty(job)) {\n      success = scheduledJobs[job].cancel();\n    }\n  }\n\n  return success;\n}\n/* Public API */\n\n\nmodule.exports = {\n  scheduleJob: scheduleJob,\n  rescheduleJob: rescheduleJob,\n  scheduledJobs: scheduledJobs,\n  cancelJob: cancelJob\n};","map":{"version":3,"sources":["/home/user/Desktop/project/iqoption/node_modules/node-schedule/lib/schedule.js"],"names":["require","Job","scheduledJobs","scheduleJob","arguments","length","RangeError","name","spec","method","callback","job","schedule","rescheduleJob","reschedule","hasOwnProperty","Error","cancelJob","success","cancel","String","module","exports"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;;AAEA,eAA+BA,OAAO,CAAC,OAAD,CAAtC;AAAA,IAAQC,GAAR,YAAQA,GAAR;AAAA,IAAaC,aAAb,YAAaA,aAAb;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AACA,SAASC,WAAT,GAAuB;AACrB,MAAIC,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACxB,UAAM,IAAIC,UAAJ,CAAe,6BAAf,CAAN;AACD;;AAED,MAAMC,IAAI,GAAIH,SAAS,CAACC,MAAV,IAAoB,CAApB,IAAyB,OAAOD,SAAS,CAAC,CAAD,CAAhB,KAAwB,QAAlD,GAA8DA,SAAS,CAAC,CAAD,CAAvE,GAA6E,IAA1F;AACA,MAAMI,IAAI,GAAGD,IAAI,GAAGH,SAAS,CAAC,CAAD,CAAZ,GAAkBA,SAAS,CAAC,CAAD,CAA5C;AACA,MAAMK,MAAM,GAAGF,IAAI,GAAGH,SAAS,CAAC,CAAD,CAAZ,GAAkBA,SAAS,CAAC,CAAD,CAA9C;AACA,MAAMM,QAAQ,GAAGH,IAAI,GAAGH,SAAS,CAAC,CAAD,CAAZ,GAAkBA,SAAS,CAAC,CAAD,CAAhD;;AAEA,MAAI,OAAOK,MAAP,KAAkB,UAAtB,EAAkC;AAChC,UAAM,IAAIH,UAAJ,CAAe,oCAAf,CAAN;AACD;;AAED,MAAMK,GAAG,GAAG,IAAIV,GAAJ,CAAQM,IAAR,EAAcE,MAAd,EAAsBC,QAAtB,CAAZ;;AAEA,MAAIC,GAAG,CAACC,QAAJ,CAAaJ,IAAb,CAAJ,EAAwB;AACtB,WAAOG,GAAP;AACD;;AAED,SAAO,IAAP;AACD;;AAED,SAASE,aAAT,CAAuBF,GAAvB,EAA4BH,IAA5B,EAAkC;AAChC,MAAIG,GAAG,YAAYV,GAAnB,EAAwB;AACtB,QAAIU,GAAG,CAACG,UAAJ,CAAeN,IAAf,CAAJ,EAA0B;AACxB,aAAOG,GAAP;AACD;AACF,GAJD,MAIO,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAClC,QAAIT,aAAa,CAACa,cAAd,CAA6BJ,GAA7B,CAAJ,EAAuC;AACrC,UAAIT,aAAa,CAACS,GAAD,CAAb,CAAmBG,UAAnB,CAA8BN,IAA9B,CAAJ,EAAyC;AACvC,eAAON,aAAa,CAACS,GAAD,CAApB;AACD;AACF,KAJD,MAIO;AACL,YAAM,IAAIK,KAAJ,CAAU,mEAAV,CAAN;AACD;AACF;;AACD,SAAO,IAAP;AACD;;AAED,SAASC,SAAT,CAAmBN,GAAnB,EAAwB;AACtB,MAAIO,OAAO,GAAG,KAAd;;AACA,MAAIP,GAAG,YAAYV,GAAnB,EAAwB;AACtBiB,IAAAA,OAAO,GAAGP,GAAG,CAACQ,MAAJ,EAAV;AACD,GAFD,MAEO,IAAI,OAAOR,GAAP,IAAc,QAAd,IAA0BA,GAAG,YAAYS,MAA7C,EAAqD;AAC1D,QAAIT,GAAG,IAAIT,aAAP,IAAwBA,aAAa,CAACa,cAAd,CAA6BJ,GAA7B,CAA5B,EAA+D;AAC7DO,MAAAA,OAAO,GAAGhB,aAAa,CAACS,GAAD,CAAb,CAAmBQ,MAAnB,EAAV;AACD;AACF;;AAED,SAAOD,OAAP;AACD;AAED;;;AACAG,MAAM,CAACC,OAAP,GAAiB;AACfnB,EAAAA,WAAW,EAAXA,WADe;AAEfU,EAAAA,aAAa,EAAbA,aAFe;AAGfX,EAAAA,aAAa,EAAbA,aAHe;AAIfe,EAAAA,SAAS,EAATA;AAJe,CAAjB","sourcesContent":["'use strict';\n\n/*\n  node-schedule\n  A cron-like and not-cron-like job scheduler for Node.\n*/\n\nconst { Job, scheduledJobs } = require('./Job')\n\n/* API\n  invoke()\n  runOnDate(date)\n  schedule(date || recurrenceRule || cronstring)\n  cancel(reschedule = false)\n  cancelNext(reschedule = true)\n\n   Property constraints\n  name: readonly\n  job: readwrite\n*/\n\n/* Convenience methods */\nfunction scheduleJob() {\n  if (arguments.length < 2) {\n    throw new RangeError('Invalid number of arguments');\n  }\n\n  const name = (arguments.length >= 3 && typeof arguments[0] === 'string') ? arguments[0] : null;\n  const spec = name ? arguments[1] : arguments[0];\n  const method = name ? arguments[2] : arguments[1];\n  const callback = name ? arguments[3] : arguments[2];\n\n  if (typeof method !== 'function') {\n    throw new RangeError('The job method must be a function.');\n  }\n\n  const job = new Job(name, method, callback);\n\n  if (job.schedule(spec)) {\n    return job;\n  }\n\n  return null;\n}\n\nfunction rescheduleJob(job, spec) {\n  if (job instanceof Job) {\n    if (job.reschedule(spec)) {\n      return job;\n    }\n  } else if (typeof job === 'string') {\n    if (scheduledJobs.hasOwnProperty(job)) {\n      if (scheduledJobs[job].reschedule(spec)) {\n        return scheduledJobs[job];\n      }\n    } else {\n      throw new Error('Cannot reschedule one-off job by name, pass job reference instead')\n    }\n  }\n  return null;\n}\n\nfunction cancelJob(job) {\n  let success = false;\n  if (job instanceof Job) {\n    success = job.cancel();\n  } else if (typeof job == 'string' || job instanceof String) {\n    if (job in scheduledJobs && scheduledJobs.hasOwnProperty(job)) {\n      success = scheduledJobs[job].cancel();\n    }\n  }\n\n  return success;\n}\n\n/* Public API */\nmodule.exports = {\n  scheduleJob,\n  rescheduleJob,\n  scheduledJobs,\n  cancelJob\n}\n"]},"metadata":{},"sourceType":"script"}