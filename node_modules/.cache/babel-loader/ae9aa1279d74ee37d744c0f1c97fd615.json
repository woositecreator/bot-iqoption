{"ast":null,"code":"var _createForOfIteratorHelper = require(\"/home/user/Desktop/project/iqoption/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nmodule.exports = function () {\n  var _this = this;\n\n  return new Promise(function (resolve, reject) {\n    var id = _this.WebSocket.send(\"ssid\", _this.ssid);\n\n    _this.WebSocket.getMessage(\"profile\", function (message) {\n      if (message.msg == false) return reject(\"Não foi possivel conectar.\");\n\n      if (message.request_id == id) {\n        var _iterator = _createForOfIteratorHelper(message.msg.balances),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var balance = _step.value;\n\n            for (var _i = 0, _arr = [\"digital-option\", \"binary-option\", \"turbo-option\", \"forex\"]; _i < _arr.length; _i++) {\n              var instrumentType = _arr[_i];\n\n              _this.WebSocket.send(\"subscribeMessage\", {\n                name: \"portfolio.position-changed\",\n                version: \"2.0\",\n                params: {\n                  routingFilters: {\n                    user_id: balance.user_id,\n                    user_balance_id: balance.id,\n                    instrument_type: instrumentType\n                  }\n                }\n              });\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        _this.profile = message.msg;\n        _this.connected = true;\n        return resolve();\n      }\n    });\n  });\n};","map":{"version":3,"sources":["/home/user/Desktop/project/iqoption/node_modules/iqoptionzzz/lib/api/websocket/connect.js"],"names":["module","exports","Promise","resolve","reject","id","WebSocket","send","ssid","getMessage","message","msg","request_id","balances","balance","instrumentType","name","version","params","routingFilters","user_id","user_balance_id","instrument_type","profile","connected"],"mappings":";;AAAAA,MAAM,CAACC,OAAP,GAAiB,YAAW;AAAA;;AAC3B,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvC,QAAMC,EAAE,GAAG,KAAI,CAACC,SAAL,CAAeC,IAAf,CAAoB,MAApB,EAA4B,KAAI,CAACC,IAAjC,CAAX;;AAEA,IAAA,KAAI,CAACF,SAAL,CAAeG,UAAf,CAA0B,SAA1B,EAAqC,UAAAC,OAAO,EAAI;AAC/C,UAAIA,OAAO,CAACC,GAAR,IAAe,KAAnB,EACC,OAAOP,MAAM,CAAC,4BAAD,CAAb;;AAED,UAAIM,OAAO,CAACE,UAAR,IAAsBP,EAA1B,EAA8B;AAAA,mDACPK,OAAO,CAACC,GAAR,CAAYE,QADL;AAAA;;AAAA;AAC7B,8DAA4C;AAAA,gBAAjCC,OAAiC;;AAC3C,oCAA6B,CAAC,gBAAD,EAAmB,eAAnB,EAAoC,cAApC,EAAoD,OAApD,CAA7B,0BAA2F;AAAtF,kBAAMC,cAAc,WAApB;;AACJ,cAAA,KAAI,CAACT,SAAL,CAAeC,IAAf,CAAoB,kBAApB,EAAwC;AACvCS,gBAAAA,IAAI,EAAE,4BADiC;AAEvCC,gBAAAA,OAAO,EAAE,KAF8B;AAGvCC,gBAAAA,MAAM,EAAE;AACPC,kBAAAA,cAAc,EAAE;AACfC,oBAAAA,OAAO,EAAEN,OAAO,CAACM,OADF;AAEfC,oBAAAA,eAAe,EAAEP,OAAO,CAACT,EAFV;AAGfiB,oBAAAA,eAAe,EAAEP;AAHF;AADT;AAH+B,eAAxC;AAWA;AACD;AAf4B;AAAA;AAAA;AAAA;AAAA;;AAiB7B,QAAA,KAAI,CAACQ,OAAL,GAAeb,OAAO,CAACC,GAAvB;AACA,QAAA,KAAI,CAACa,SAAL,GAAiB,IAAjB;AACA,eAAOrB,OAAO,EAAd;AACA;AACD,KAzBD;AA0BA,GA7BM,CAAP;AA8BA,CA/BD","sourcesContent":["module.exports = function() {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst id = this.WebSocket.send(\"ssid\", this.ssid)\r\n\t\t\r\n\t\tthis.WebSocket.getMessage(\"profile\", message => {\r\n\t\t\tif (message.msg == false)\r\n\t\t\t\treturn reject(\"Não foi possivel conectar.\")\r\n\r\n\t\t\tif (message.request_id == id) {\r\n\t\t\t\tfor (const balance of message.msg.balances) {\r\n\t\t\t\t\tfor (const instrumentType of [\"digital-option\", \"binary-option\", \"turbo-option\", \"forex\"]) {\r\n\t\t\t\t\t\tthis.WebSocket.send(\"subscribeMessage\", {\r\n\t\t\t\t\t\t\tname: \"portfolio.position-changed\",\r\n\t\t\t\t\t\t\tversion: \"2.0\",\r\n\t\t\t\t\t\t\tparams: {\r\n\t\t\t\t\t\t\t\troutingFilters: {\r\n\t\t\t\t\t\t\t\t\tuser_id: balance.user_id,\r\n\t\t\t\t\t\t\t\t\tuser_balance_id: balance.id,\r\n\t\t\t\t\t\t\t\t\tinstrument_type: instrumentType\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.profile = message.msg\r\n\t\t\t\tthis.connected = true\r\n\t\t\t\treturn resolve()\r\n\t\t\t}\r\n\t\t})\r\n\t})\r\n}"]},"metadata":{},"sourceType":"script"}