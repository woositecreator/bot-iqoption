{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/project/iqoption/src/pages/LoginIQ/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport logoIq from '../../assets/img/logo_iq.png';\nimport { toast } from 'react-toastify';\nimport { Div, Banner } from './styled';\nimport { useDispatch } from 'react-redux';\nimport * as actions from '../../store/modules/iqoption/action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function LoginIQ({\n  history\n}) {\n  _s();\n\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const button = React.useRef();\n  const dispatch = useDispatch();\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    button.current.disabled = true;\n\n    if (!email || !password) {\n      toast.error('Campos vazios');\n      button.current.disabled = false;\n      return;\n    }\n\n    try {\n      const {\n        data: {\n          ssid\n        }\n      } = await toast.promise(axios.post(`http://${process.env.REACT_APP_PUBLIC_URL}/api/v2/login`, {\n        identifier: email,\n        password\n      }), {\n        success: 'Logado com sucesso',\n        error: 'Falha no login',\n        pending: 'Carregando'\n      });\n      dispatch(actions.loginIqoption({\n        email: email,\n        password,\n        ssid: ssid\n      }));\n      history.push('/main');\n    } catch (e) {\n      dispatch(actions.logoutIqoption());\n      button.current.disabled = false;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Banner, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logoIq,\n        alt: \"Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Div, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          onChange: e => {\n            setEmail(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Senha:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          onChange: e => {\n            setPassword(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          ref: button,\n          type: \"submit\",\n          children: \"Entrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(LoginIQ, \"t988r7vw9C93oA5iiBQ1SxmjYow=\", false, function () {\n  return [useDispatch];\n});\n\n_c = LoginIQ;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginIQ\");","map":{"version":3,"sources":["/home/user/Desktop/project/iqoption/src/pages/LoginIQ/index.tsx"],"names":["React","axios","logoIq","toast","Div","Banner","useDispatch","actions","LoginIQ","history","email","setEmail","useState","password","setPassword","button","useRef","dispatch","handleSubmit","e","preventDefault","current","disabled","error","data","ssid","promise","post","process","env","REACT_APP_PUBLIC_URL","identifier","success","pending","loginIqoption","push","logoutIqoption","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport axios from 'axios';\n\nimport { RouteComponentProps } from 'react-router-dom';\n\nimport logoIq from '../../assets/img/logo_iq.png';\n\nimport { toast } from 'react-toastify';\nimport { Div, Banner } from './styled';\n\nimport { useDispatch } from 'react-redux';\nimport * as actions from '../../store/modules/iqoption/action';\n\nexport default function LoginIQ({ history }:{ history: RouteComponentProps['history'] }) {\n    const [ email, setEmail ] = React.useState('');\n    const [ password, setPassword ] = React.useState('');\n\n    const button = React.useRef<HTMLButtonElement>();\n    \n    const dispatch = useDispatch();\n\n    async function handleSubmit(e: React.FormEvent<HTMLFormElement>): Promise<void> {\n        e.preventDefault();\n        button.current.disabled = true;\n\n        if(!email || !password) {\n            toast.error('Campos vazios');\n            button.current.disabled = false;\n            return;\n        }\n        try {\n            const { data: { ssid } }: { data: { ssid: string; } } = await toast.promise(axios.post(`http://${process.env.REACT_APP_PUBLIC_URL}/api/v2/login`, {\n                identifier: email,\n                password\n            }), {\n                success: 'Logado com sucesso',\n                error: 'Falha no login',\n                pending: 'Carregando'\n            });\n\n            dispatch(actions.loginIqoption({\n                email: email,\n                password,\n                ssid: ssid\n            }));\n           history.push('/main');\n        } catch(e) {\n            dispatch(actions.logoutIqoption());\n            button.current.disabled = false;\n        }\n    }\n    \n    return(\n        <>\n        <Banner>\n            <img src={logoIq} alt=\"Logo\" />\n        </Banner>\n\n        <Div>\n            <form onSubmit={handleSubmit}>\n                <p>Email:</p>\n                <input type=\"email\" onChange={(e) => {\n                    setEmail(e.target.value);\n                }}/>\n                <p>Senha:</p>\n                <input type=\"password\" onChange={(e) => {\n                    setPassword(e.target.value);\n                }} />\n\n                <button ref={button} type=\"submit\">Entrar</button>\n            </form>\n        </Div>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}