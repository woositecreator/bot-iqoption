{"ast":null,"code":"module.exports = function () {\n  return new Promise(resolve => {\n    const callback = message => {\n      if (message.msg.status == \"closed\" && (this.options.type == \"BINARY\" && message.msg.external_id == this.quote.id || this.options.type == \"DIGITAL\" && message.msg.raw_event.order_ids.indexOf(this.quote.id) != -1)) {\n        this.API.WebSocket.emitter.removeListener(\"position-changed\", callback);\n        const action = this.options.action;\n        const {\n          open_quote,\n          close_quote\n        } = message.msg;\n        this.quote.win = open_quote < close_quote && action == \"CALL\" || open_quote > close_quote && action == \"PUT\";\n        this.quote.status = \"closed\";\n        return resolve(message.msg);\n      }\n    };\n\n    this.API.WebSocket.getMessage(\"position-changed\", callback);\n  });\n};","map":{"version":3,"sources":["/home/user/Desktop/project/iqoption/node_modules/iqoptionzzz/lib/api/websocket/buy/close.js"],"names":["module","exports","Promise","resolve","callback","message","msg","status","options","type","external_id","quote","id","raw_event","order_ids","indexOf","API","WebSocket","emitter","removeListener","action","open_quote","close_quote","win","getMessage"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,YAAW;AAC3B,SAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC7B,UAAMC,QAAQ,GAAGC,OAAO,IAAI;AAC3B,UAAIA,OAAO,CAACC,GAAR,CAAYC,MAAZ,IAAsB,QAAtB,KAAoC,KAAKC,OAAL,CAAaC,IAAb,IAAqB,QAArB,IAAiCJ,OAAO,CAACC,GAAR,CAAYI,WAAZ,IAA2B,KAAKC,KAAL,CAAWC,EAAxE,IAAgF,KAAKJ,OAAL,CAAaC,IAAb,IAAqB,SAArB,IAAkCJ,OAAO,CAACC,GAAR,CAAYO,SAAZ,CAAsBC,SAAtB,CAAgCC,OAAhC,CAAwC,KAAKJ,KAAL,CAAWC,EAAnD,KAA0D,CAAC,CAAhN,CAAJ,EAAyN;AACxN,aAAKI,GAAL,CAASC,SAAT,CAAmBC,OAAnB,CAA2BC,cAA3B,CAA0C,kBAA1C,EAA8Df,QAA9D;AAEA,cAAMgB,MAAM,GAAG,KAAKZ,OAAL,CAAaY,MAA5B;AAEA,cAAM;AACLC,UAAAA,UADK;AAELC,UAAAA;AAFK,YAGFjB,OAAO,CAACC,GAHZ;AAKA,aAAKK,KAAL,CAAWY,GAAX,GAAmBF,UAAU,GAAGC,WAAd,IAA8BF,MAAM,IAAI,MAAzC,IAAsDC,UAAU,GAAGC,WAAd,IAA8BF,MAAM,IAAI,KAA9G;AACA,aAAKT,KAAL,CAAWJ,MAAX,GAAoB,QAApB;AACA,eAAOJ,OAAO,CAACE,OAAO,CAACC,GAAT,CAAd;AACA;AACD,KAfD;;AAiBA,SAAKU,GAAL,CAASC,SAAT,CAAmBO,UAAnB,CAA8B,kBAA9B,EAAkDpB,QAAlD;AACA,GAnBM,CAAP;AAoBA,CArBD","sourcesContent":["module.exports = function() {\r\n\treturn new Promise(resolve => {\r\n\t\tconst callback = message => {\r\n\t\t\tif (message.msg.status == \"closed\" && ((this.options.type == \"BINARY\" && message.msg.external_id == this.quote.id) || (this.options.type == \"DIGITAL\" && message.msg.raw_event.order_ids.indexOf(this.quote.id) != -1))) {\r\n\t\t\t\tthis.API.WebSocket.emitter.removeListener(\"position-changed\", callback)\r\n\t\t\t\t\r\n\t\t\t\tconst action = this.options.action\r\n\r\n\t\t\t\tconst {\r\n\t\t\t\t\topen_quote,\r\n\t\t\t\t\tclose_quote\r\n\t\t\t\t} = message.msg\r\n\r\n\t\t\t\tthis.quote.win = ((open_quote < close_quote) && action == \"CALL\") || ((open_quote > close_quote) && action == \"PUT\")\r\n\t\t\t\tthis.quote.status = \"closed\"\r\n\t\t\t\treturn resolve(message.msg)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.API.WebSocket.getMessage(\"position-changed\", callback)\r\n\t})\r\n}"]},"metadata":{},"sourceType":"script"}