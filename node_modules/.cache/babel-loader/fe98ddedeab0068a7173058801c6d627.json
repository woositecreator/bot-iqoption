{"ast":null,"code":"module.exports = function () {\n  return new Promise((resolve, reject) => {\n    const id = this.WebSocket.send(\"ssid\", this.ssid);\n    this.WebSocket.getMessage(\"profile\", message => {\n      if (message.msg == false) return reject(\"Não foi possivel conectar.\");\n\n      if (message.request_id == id) {\n        for (const balance of message.msg.balances) {\n          for (const instrumentType of [\"digital-option\", \"binary-option\", \"turbo-option\", \"forex\"]) {\n            this.WebSocket.send(\"subscribeMessage\", {\n              name: \"portfolio.position-changed\",\n              version: \"2.0\",\n              params: {\n                routingFilters: {\n                  user_id: balance.user_id,\n                  user_balance_id: balance.id,\n                  instrument_type: instrumentType\n                }\n              }\n            });\n          }\n        }\n\n        this.profile = message.msg;\n        this.connected = true;\n        return resolve();\n      }\n    });\n  });\n};","map":{"version":3,"sources":["/home/user/Desktop/project/iqoption/node_modules/iqoptionzzz/lib/api/websocket/connect.js"],"names":["module","exports","Promise","resolve","reject","id","WebSocket","send","ssid","getMessage","message","msg","request_id","balance","balances","instrumentType","name","version","params","routingFilters","user_id","user_balance_id","instrument_type","profile","connected"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,YAAW;AAC3B,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACvC,UAAMC,EAAE,GAAG,KAAKC,SAAL,CAAeC,IAAf,CAAoB,MAApB,EAA4B,KAAKC,IAAjC,CAAX;AAEA,SAAKF,SAAL,CAAeG,UAAf,CAA0B,SAA1B,EAAqCC,OAAO,IAAI;AAC/C,UAAIA,OAAO,CAACC,GAAR,IAAe,KAAnB,EACC,OAAOP,MAAM,CAAC,4BAAD,CAAb;;AAED,UAAIM,OAAO,CAACE,UAAR,IAAsBP,EAA1B,EAA8B;AAC7B,aAAK,MAAMQ,OAAX,IAAsBH,OAAO,CAACC,GAAR,CAAYG,QAAlC,EAA4C;AAC3C,eAAK,MAAMC,cAAX,IAA6B,CAAC,gBAAD,EAAmB,eAAnB,EAAoC,cAApC,EAAoD,OAApD,CAA7B,EAA2F;AAC1F,iBAAKT,SAAL,CAAeC,IAAf,CAAoB,kBAApB,EAAwC;AACvCS,cAAAA,IAAI,EAAE,4BADiC;AAEvCC,cAAAA,OAAO,EAAE,KAF8B;AAGvCC,cAAAA,MAAM,EAAE;AACPC,gBAAAA,cAAc,EAAE;AACfC,kBAAAA,OAAO,EAAEP,OAAO,CAACO,OADF;AAEfC,kBAAAA,eAAe,EAAER,OAAO,CAACR,EAFV;AAGfiB,kBAAAA,eAAe,EAAEP;AAHF;AADT;AAH+B,aAAxC;AAWA;AACD;;AAED,aAAKQ,OAAL,GAAeb,OAAO,CAACC,GAAvB;AACA,aAAKa,SAAL,GAAiB,IAAjB;AACA,eAAOrB,OAAO,EAAd;AACA;AACD,KAzBD;AA0BA,GA7BM,CAAP;AA8BA,CA/BD","sourcesContent":["module.exports = function() {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tconst id = this.WebSocket.send(\"ssid\", this.ssid)\r\n\t\t\r\n\t\tthis.WebSocket.getMessage(\"profile\", message => {\r\n\t\t\tif (message.msg == false)\r\n\t\t\t\treturn reject(\"Não foi possivel conectar.\")\r\n\r\n\t\t\tif (message.request_id == id) {\r\n\t\t\t\tfor (const balance of message.msg.balances) {\r\n\t\t\t\t\tfor (const instrumentType of [\"digital-option\", \"binary-option\", \"turbo-option\", \"forex\"]) {\r\n\t\t\t\t\t\tthis.WebSocket.send(\"subscribeMessage\", {\r\n\t\t\t\t\t\t\tname: \"portfolio.position-changed\",\r\n\t\t\t\t\t\t\tversion: \"2.0\",\r\n\t\t\t\t\t\t\tparams: {\r\n\t\t\t\t\t\t\t\troutingFilters: {\r\n\t\t\t\t\t\t\t\t\tuser_id: balance.user_id,\r\n\t\t\t\t\t\t\t\t\tuser_balance_id: balance.id,\r\n\t\t\t\t\t\t\t\t\tinstrument_type: instrumentType\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.profile = message.msg\r\n\t\t\t\tthis.connected = true\r\n\t\t\t\treturn resolve()\r\n\t\t\t}\r\n\t\t})\r\n\t})\r\n}"]},"metadata":{},"sourceType":"script"}